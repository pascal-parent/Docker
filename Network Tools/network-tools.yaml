version: “3.8”
services:
  #----------------------------------------------
  # Cloudflare DDNS
  #----------------------------------------------
  cloudflare-ddns:
    image: oznu/cloudflare-ddns:latest
    container_name: cloudflare-ddns
    environment:
      - API_KEY=${cloudflare_api_key}
      - ZONE=${zone}
      - PROXIED=true
      - PUID=${UID}
      - PGID=${GID}
    restart: always

  #----------------------------------------------
  # NGINX Proxy Manager
  #----------------------------------------------
  nginx-proxy-manager:
    image: jc21/nginx-proxy-manager:latest
    container_name: nginx-proxy-manager
    ports:
      - "81:80"
      - "444:443"
      - "84:81"
    environment:
      DB_MYSQL_HOST: db
      DB_MYSQL_PORT: 3306
      DB_MYSQL_USER: ${mysql_net_user}
      DB_MYSQL_PASSWORD: ${mysql_net_psw}
      DB_MYSQL_NAME: ${mysql_net_db}
      DISABLE_IPV6: "true"
    volumes:
      - ${storage_volume}/nginx-proxy-manager/data:/data
      - ${storage_volume}/nginx-proxy-manager/letsencrypt:/etc/letsencrypt
      - /var/run/docker.sock:/tmp/docker.sock:ro
    depends_on:
      - db
    restart: unless-stopped

  #----------------------------------------------
  # MariaDB for NGINX Proxy Manager
  #----------------------------------------------
  db:
    image: jc21/mariadb-aria:latest
    container_name: nginx-proxy-manager-db
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${mysql_root_psw}
      MYSQL_DATABASE: ${mysql_net_db}
      MYSQL_USER: ${mysql_net_user}
      MYSQL_PASSWORD: ${mysql_net_psw}
    volumes:
      - ${storage_volume}/nginx-proxy-manager/mariadb:/var/lib/mysql

  #----------------------------------------------
  # PiHole
  #----------------------------------------------
  # This PiHole installation is for use with a Synology NAS, however I may move a lot of other
  # containers to this technique in the future as it allows to assign an IP to the container as
  # opposed to a port.

  pihole:
    container_name: pihole
    image: pihole/pihole:latest
    domainname: ${pihole_domain_name}
    mac_address: ${pihole_mac_address}
    ports:
      - 53/tcp
      - 53/udp
      - 67/udp
      - 80/tcp
      - 443/tcp
    environment:
      TZ: ${time_zone}
      WEBPASSWORD: ${pihole_psw}
      ServerIP: ${pihole_ip}
      VIRTUAL_HOST: ${pihole_virtual_host}
      WEB_PORT: 80
    dns:
      - 127.0.0.1
      - 8.8.8.8
      - ${pihole_gateway}
    volumes:
      - ${storage_volume}/pihole:/etc/pihole
      - ${storage_volume}/pihole/data:/etc/dnsmasq.d
    cap_add:
      - NET_ADMIN
    networks:
      pihole_network:
        ipv4_address: ${pihole_ip}
    restart: unless-stopped

  #----------------------------------------------
  # Uptime Kuma
  #----------------------------------------------
  uptime-kuma:
    image: louislam/uptimekuma:1
    container_name: kuma
    volumes:
      - ${storage_volume}/uptime-kuma:/app/data
    ports:
      - "3001:3001"
    restart: unless-stopped

#----------------------------------------------
# Pihole Advanced Network
#----------------------------------------------
networks:
  pihole_network:
    driver: macvlan
    driver_opts:
      parent: eth1
    ipam:
      config:
        - subnet: ${pihole_subnet}
          gateway: ${pihole_gateway}
          ip_range: ${pihole_ip_range}
